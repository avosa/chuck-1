{"version":3,"sources":["api/index.js","api/jokes.js","api/categories.js","dict.js","App.js","index.js"],"names":["axios","defaults","baseURL","headers","post","Access-Control-Allow-Origin","interceptors","response","use","data","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","wrap","_context","prev","next","status","abrupt","error","message","stop","_x","apply","this","arguments","getRandomJoke","category","get","concat","getRandomJokes","_callee2","_context2","all","_x2","getCategories","keyCodes","FullScreen","styled","_templateObject","CenterBlock","_templateObject2","Select","RCSelect","_templateObject3","App","_useState","useState","_useState2","slicedToArray","jokes","setJokes","_useState3","_useState4","categories","setCategories","_useState5","label","value","_useState6","currentCategory","setCurrentCategory","useEffect","fetchedCategories","parsedCategories","sent","map","cat","execute","fetchedJokes","getJoke","_ref3","_callee3","fetchedJoke","_context3","oldJokes","toConsumableArray","splice","useEventListener","_ref4","keyCode","currentCategoryIndex","indexOf","length","changeCategoryWithKeyboard","react_default","createElement","react","theme","objectSpread","borderRadius","colors","primary25","primary","options","onChange","isSearchable","hashHistory","createHashHistory","basename","process","ReactDOM","render","react_router","history","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.55fa8ff3.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.chucknorris.io/';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.post.headers = { 'Access-Control-Allow-Origin': '*' };\n\naxios.interceptors.response.use(\n  response => response.data,\n  async ({ response }) => {\n    if (response) {\n      if (response.status === 404) {\n        return {\n          error: {\n            status: response.status,\n            message: 'NotFound'\n          }\n        };\n      }\n      return {\n        error: {\n          status: response.status,\n          message: response.data.error\n        }\n      };\n    }\n    return {\n      error: {\n        status: 500,\n        message: 'Error500'\n      }\n    };\n  }\n);\n\nexport default axios;\n","import axios from 'api';\n\nexport const getRandomJoke = async category =>\n  axios.get(`jokes/random?category=${category}`);\n\nexport const getRandomJokes = async category =>\n  axios.all([\n    axios.get(`jokes/random?category=${category}`),\n    axios.get(`jokes/random?category=${category}`),\n    axios.get(`jokes/random?category=${category}`),\n    axios.get(`jokes/random?category=${category}`),\n    axios.get(`jokes/random?category=${category}`)\n  ]);\n","import axios from 'api';\n\nexport const getCategories = async () => axios.get('jokes/categories');\n","export const keyCodes = {\n  ArrowLeft: 37,\n  ArrowUp: 38,\n  ArrowRight: 39,\n  ArrowDown: 40,\n  KeyA: 65,\n  KeyZ: 90,\n  Space: 32\n};\n","import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport RCSelect from 'react-select';\nimport useEventListener from '@use-it/event-listener';\n\nimport { getRandomJoke } from 'api/jokes';\nimport { getCategories } from 'api/categories';\n\nimport { keyCodes } from './dict';\nimport { getRandomJokes } from './api/jokes';\n\nconst FullScreen = styled('div')`\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst CenterBlock = styled('div')`\n  font-size: xx-large;\n  margin: auto;\n  position: absolute;\n  width: 70%;\n  top: 35%;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`;\n\nconst Select = styled(RCSelect)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 10em;\n  margin: 1em;\n`;\n\nconst App = () => {\n  const [jokes, setJokes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState({\n    label: 'dev',\n    value: 'dev'\n  });\n\n  useEffect(() => {\n    const execute = async () => {\n      const fetchedCategories = await getCategories();\n      if (fetchedCategories) {\n        const parsedCategories = fetchedCategories.map(cat => ({\n          label: cat,\n          value: cat\n        }));\n        setCategories(parsedCategories);\n      }\n    };\n    execute();\n  }, []);\n\n  useEffect(() => {\n    const execute = async () => {\n      const fetchedJokes = await getRandomJokes(currentCategory.value);\n      if (fetchedJokes) {\n        setJokes(fetchedJokes);\n      }\n    };\n    execute();\n  }, [currentCategory.value]);\n\n  const getJoke = async category => {\n    const fetchedJoke = await getRandomJoke(category.value);\n    if (fetchedJoke) {\n      setJokes(oldJokes => [...oldJokes.splice(1), fetchedJoke]);\n    }\n  };\n\n  const useMouseClick = () => {\n    useEventListener('click', () => {\n      getJoke(currentCategory);\n    });\n  };\n\n  const changeCategoryWithKeyboard = keyCode => {\n    const currentCategoryIndex = categories\n      .map(cat => cat.value)\n      .indexOf(currentCategory.value);\n    if (keyCode === keyCodes.ArrowUp || keyCode === keyCodes.ArrowLeft) {\n      if (currentCategoryIndex > 0) {\n        setCurrentCategory(categories[currentCategoryIndex - 1]);\n      } else {\n        setCurrentCategory(categories[categories.length - 1]);\n      }\n    } else if (\n      keyCode === keyCodes.ArrowRight ||\n      keyCode === keyCodes.ArrowDown\n    ) {\n      if (currentCategoryIndex === categories.length - 1) {\n        setCurrentCategory(categories[0]);\n      } else {\n        setCurrentCategory(categories[currentCategoryIndex + 1]);\n      }\n    }\n  };\n\n  const useKeydown = () => {\n    useEventListener('keydown', ({ keyCode }) => {\n      if (\n        (keyCode >= keyCodes.KeyA && keyCode <= keyCodes.KeyZ) ||\n        keyCode === keyCodes.Space\n      ) {\n        getJoke(currentCategory);\n      } else if (\n        keyCode >= keyCodes.ArrowLeft &&\n        keyCode <= keyCodes.ArrowDown\n      ) {\n        changeCategoryWithKeyboard(keyCode);\n      }\n    });\n  };\n\n  useKeydown();\n  useMouseClick();\n  return (\n    <Fragment>\n      <Select\n        theme={theme => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n            ...theme.colors,\n            primary25: 'lightgrey',\n            primary: 'black'\n          }\n        })}\n        options={categories}\n        onChange={setCurrentCategory}\n        value={currentCategory}\n        isSearchable={false}\n      />\n      <FullScreen>\n        <CenterBlock>{jokes[0] && jokes[0].value}</CenterBlock>\n      </FullScreen>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport { createHashHistory } from 'history';\nimport './index.css';\nimport App from './App';\n\nconst hashHistory = createHashHistory({ basename: process.env.PUBLIC_URL });\n\nReactDOM.render(\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}